---

# Input validation
# ----------------

# Subscription Manager
# --------------------
# All RHSM repos required by the "composer-cli" blueprint must be enabled
# on the host machine.
- name: Enable Ansible Automation Repository repository
  community.general.rhsm_repository:
    name:
      - "{{ item }}"
  loop: "{{ composer_rhsm_repos }}"


# Setup osbuild config files and repos
# ------------------------------------
- name: "include: for each in rhsm_repos, _each_osbuild_rhsm_repo_setup.yml"
  ansible.builtin.include_tasks:
    file: _each_osbuild_rhsm_repo_setup.yml
  loop: "{{ composer_rhsm_repos }}"
  loop_control:
    loop_var: _rhsm_repo

- name: "block: config container registry"
  when: composer_support_container
  block:
    - name: Create dir /etc/osbuild-worker/
      ansible.builtin.file:
        path: /etc/osbuild-worker/
        state: directory
        mode: '0755'

    - name: Create /etc/osbuild-worker/osbuild-worker.toml
      ansible.builtin.copy:
        content: |
          [containers]
          auth_file_path = "/etc/osbuild-worker/containers-auth.json"
        dest: /etc/osbuild-worker/osbuild-worker.toml
        mode: '0644'

    - name: Copy container registry config file
      ansible.builtin.copy:
        src: "{{ composer_local_container_registry_auth_file }}"
        dest: /etc/osbuild-worker/containers-auth.json
        mode: '0644'

    - name: Test authentication to registry.redhat.io
      when: composer_support_container
      ansible.builtin.command:
        cmd: "podman login --authfile /etc/osbuild-worker/containers-auth.json registry.redhat.io"
      register: result_podman_login

    - name: "[debug] podman login"
      when: composer_support_container
      ansible.builtin.debug:
        msg: "{{ result_podman_login.stdout_lines }}"


- name: "block: config osbuild source"
  # TODO review the condition to properly remove all repo sources
  when: _rhsm_repo is defined
  block:
    - name: "Remove osbuild source (ignore errors)"
      ansible.builtin.command:
        cmd: "composer-cli sources remove {{ _rhsm_repo }}"
      register: result_remove_source
      ignore_errors: true

    - name: "Add osbuild source"
      ansible.builtin.command:
        cmd: "composer-cli sources add {{ composer_osbuild_workdir }}/source.toml"
      register: result_add_source

    - name: "Get list of sources"
      ansible.builtin.command:
        cmd: "composer-cli sources list"
      register: result_list_sources

    - name: "[debug] List of sources"
      ansible.builtin.debug:
        msg: "{{ result_list_sources.stdout_lines }}"


# Blueprint and image creation
# ----------------------------
- name: Create the osbuild blueprint
  when: composer_run_step_create_blueprint
  ansible.builtin.import_tasks: build-setup-blueprint.yml

# - name: Setup Azure's credentials
#   ansible.builtin.import_tasks: build-setup-cloud-azure.yml

- name: Setup GCP's credentials
  ansible.builtin.import_tasks: build-setup-cloud-gcp.yml

- name: Run the composer (build the image)
  ansible.builtin.import_tasks: build.yml
